//@import url('https://rsms.me/inter/inter.css');

%title {
  font: {
    family: $font-family-bender;
    style: italic;
    weight: 900;
  }
  letter-spacing: .02em;
  text-transform: uppercase;
  //color: #101010;
}

@mixin title {
  font: {
    family: $font-family-bender;
    style: italic;
    weight: 900;
  }
  text-transform: uppercase;
  letter-spacing: .02em;
}

@mixin make-font-inter {
  font-family: $font-family-inter-ui;
  @supports (font-variation-settings: normal) {
    font-family: $font-family-inter-ui-var;
  }
}

%button-reset {
  padding: 0;
  border: 0;
  background-color: transparent;
  color: inherit;
  font: inherit;
  cursor: pointer;

  &:focus,
  &:active {
    outline: none;
  }
}

body {
  font-size: .875rem;

  @include media-breakpoint-up(xl) {
    font-size: 1rem;
  }

  @supports (font-variation-settings: normal) {
    font-family: $font-family-inter-ui-var;
  }
}

//html,
//body {
//  height: 100%;
//}

body,
input,
textarea,
select,
button {
  font-synthesis: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

//* {
//  transition: $animation;
//}

a {
  transition: color .2s ease;
}

p {
  font-size: 14px;
  line-height: 22px;

  @include media-breakpoint-up(xl) {
    font-size: 16px;
    line-height: 25px;
  }
}

svg,
img,
video,
audio {
  max-width: 100%;
  height: auto;
  max-height: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  @extend %title;

  @include font-size(24px);
  line-height: 30px;

  @include media-breakpoint-up(md) {
    @include font-size(36px);
    line-height: 46px;
  }
}

@include media-breakpoint-up(xl) {
  h1 {
    @include font-size(60px);
    margin-bottom: 48px;
    line-height: 69px;
  }
  h2 {
    font-size: 40px;
    line-height: 54px;
  }
}

::selection {
  background: $main-color;
  color: white;
}

.selection {
  color: $main-color;
}

.red {
  color: $main-color;
}

.green {
  color: #80c627;
}

.nowrap {
  white-space: nowrap;
}

.inter-ui {
  @include make-font-inter;
}

.price {
  &::after {
    content: 'â‚½';
    margin-left: .25em;
    @include make-font-inter;
  }
}

@include media-breakpoint-up(md) {
  .skew {
    transform: $skew;
  }

  .skew-reverse {
    transform: $skew-reverse;
  }
}

//@mixin mre-btn($map) {
//  $btn-reset: (
//          'border': 0,
//          'padding': 0,
//          'font': inherit,
//          'color': inherit,
//          'background-color': transparent,
//          'cursor': pointer,
//  );
//  //$r: map-merge($btn-reset, $map);
//
//  @each $name, $val in map-merge($btn-reset, $map) {
//    #{$name}: #{$val};
//  }
//;
//}
//.test {
//  @include mre-btn((
//          font-size: 10px,
//          border: 1px solid red
//  ))
//}

$input-height: 60px;
$input-height-xl: 60px;
$input-font-size: 16px;
$input-font-size-xl: 16px;

$input-padding-x: 16px;
$input-line-height: 1.5;
$input-border-width: 3px;

.input-field {
  position: relative;

  color: #1a1a1a;
  font-family: $font-family-bender;
  font-size: $input-font-size;
  font-weight: 900;
  letter-spacing: .02em;
  line-height: $input-line-height;

  &.active {
    .input-field {
      &__label {
        transform: translateY(-50%) translateY(-16px) scale(.625);
      }

      &__input {

      }
    }
  }

  &__label {
    position: absolute;
    top: 50%;
    left: $input-padding-x + $input-border-width;
    margin-bottom: 0;
    transform: translateY(-50%);
    transform-origin: left;
    transition: transform .3s ease;
    opacity: .4;
    text-transform: uppercase;

  }

  &__input {
    @extend .input-text;
  }
}

.input-text {

  $input-height: 60px !default;
  $input-height-xl: 60px !default;
  $input-font-size: 16px !default;
  $input-font-size-xl: 16px !default;

  $input-padding-x: 20px !default;
  $input-line-height: 1.5 !default;
  $input-border-width: 3px !default;

  display: block;
  width: 100%;

  height: $input-height;
  padding-right: $input-padding-x;
  padding-left: $input-padding-x;
  border: $input-border-width solid black;
  border-radius: 0;
  background-color: white;

  box-shadow: none;
  color: #1a1a1a;

  font-family: $font-family-bender;
  font-weight: 900;
  //background-clip: padding-box;
  letter-spacing: .02em;

  @include mre-height-block($input-font-size, ($input-height - $input-border-width), $input-line-height);
  @include media-breakpoint-up(xl) {
    @include mre-height-block($input-font-size, ($input-height-xl - $input-border-width), $input-line-height);
  }

  //@include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  &:hover {
    border-color: $main-color;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  &:focus {
    //color: $input-focus-color;
    //background-color: $input-focus-bg;
    border-color: $main-color;
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    //@if $enable-shadows {
    //  box-shadow: $input-box-shadow, $input-focus-box-shadow;
    //} @else {
    //  box-shadow: $input-focus-box-shadow;
    //}
  }

  // Placeholder
  &::placeholder {
    opacity: 1;
    color: rgba(#1a1a1a, .4);
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    text-transform: uppercase;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    opacity: 1;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    background-color: $input-disabled-bg;
  }
}

textarea.form-control {
  height: auto;
}

//.checkbox {
//  position: relative;
//  outline: 0;
//  -webkit-appearance: none;
//  -moz-appearance: none;
//  margin-bottom: 0px;
//  margin-right: 5px;
//  vertical-align: top;
//  box-sizing: border-box;
//  padding: 0;
//  border: 2px solid $main-color;
//  height: 26px;
//  width: 26px;
//  background: none;
//  border-radius: 50%;
//  cursor: pointer;
//
//  &::before {
//    content: '';
//    position: absolute;
//    width: 5px;
//    height: 10px;
//    border: 2px solid black;
//    border-left: 0;
//    border-top: 0;
//
//    transition: $animation;
//    opacity: 0;
//
//    top: 50%;
//    left: 50%;
//    transform: translate(-50%, -50%);
//  }
//
//  &:checked:before {
//    opacity: 1;
//    transform: translate(-50%, -60%) rotate(45deg);
//  }
//
//  @include media-breakpoint-up(lg) {
//    height: 25px;
//    width: 25px;
//    &:checked::before {
//      width: 7px;
//      height: 14px;
//    }
//    &_small {
//      height: 18px;
//      width: 18px;
//    }
//  }
//
//  @include media-breakpoint-up(xl) {
//    height: 30px;
//    width: 30px;
//
//    &_small {
//      height: 22px;
//      width: 22px;
//
//      &:checked::before {
//        width: 5px;
//        height: 10px;
//      }
//    }
//  }
//}
//
//@keyframes checkboxAnimation {
//  0% {
//    transform: scale(1);
//  }
//  50% {
//    transform: scale(0);
//  }
//  100% {
//    transform: scale(1);
//  }
//}
.input-checkbox {
  display: block;
  position: relative;
  padding-left: 32px;

  &_right {
    padding-right: 32px;
    padding-left: 0;

    .input-checkbox__label {
      &::before {
        right: -32px;
        left: auto;
      }

      &::after {
        right: -24px;
        left: auto;
      }
    }
  }

  &_inline {
    display: inline-flex;
    margin-right: 16px;
  }

  &__input {
    position: absolute;
    z-index: -1;
    opacity: 0;

    &:checked {
      ~ .input-checkbox__label {
        &::after {
          transform: rotate(45deg);
          opacity: 1;
        }
      }
    }

    &:disabled {
      ~ .input-checkbox__label {
        &::before {
          opacity: .2;
        }
      }
    }
  }

  &__label {
    position: relative;
    width: 100%;
    margin-bottom: 0;
    vertical-align: top;
    cursor: pointer;

    &::before {
      content: '';
      display: block;
      position: absolute;
      top: 1px;
      left: -32px;
      width: 20px;
      //pointer-events: none;
      height: 20px;
      border: 2px solid #000;
    }

    &::after {
      content: '';
      display: block;
      position: absolute;
      top: 5px;

      left: -24px;
      width: 5px;
      height: 10px;
      transition: all .3s ease;
      border-right: 2px solid $main-color;
      border-bottom: 2px solid $main-color;
      opacity: 0;
    }
  }
}

.input-radio {

  display: block;
  position: relative;
  padding-left: 32px;

  &_right {
    padding-right: 32px;
    padding-left: 0;

    .input-checkbox__label {
      &::before {
        right: -32px;
        left: auto;
      }

      &::after {
        right: -24px;
        left: auto;
      }
    }
  }

  &_inline {
    display: inline-flex;
    margin-right: 16px;
  }

  &__input {
    position: absolute;
    z-index: -1;
    opacity: 0;

    &:checked {
      ~ .input-checkbox__label {
        &::after {
          transform: rotate(45deg);
          opacity: 1;
        }
      }
    }

    &:disabled {
      //~ .input-checkbox__label {
      //  &::before {
      //    opacity: .2;
      //  }
      //}
    }
  }

  &__label {
    position: relative;
    width: 100%;
    margin-bottom: 0;
    vertical-align: top;
    cursor: pointer;

    //&::before {
    //  content: '';
    //  display: block;
    //  position: absolute;
    //  top: 1px;
    //  left: -32px;
    //  width: 20px;
    //  //pointer-events: none;
    //  height: 20px;
    //  border: 2px solid #000;
    //}

    &::after {
      content: '';
      display: block;
      position: absolute;
      top: 5px;

      left: -24px;
      width: 5px;
      height: 10px;
      transition: all .3s ease;
      border-right: 2px solid $main-color;
      border-bottom: 2px solid $main-color;
      opacity: 0;
    }
  }
}

.custom-checkbox {
  padding-left: 32px;

  &__input {
    position: absolute;
    z-index: -1;
    opacity: 0;

    &:checked {
      ~ .custom-checkbox__label {
        &::after {
          transform: rotate(45deg);
          opacity: 1;
        }
      }
    }
  }

  &__label {
    position: relative;
    margin-bottom: 0;
    vertical-align: top;
    cursor: pointer;

    &::before {
      content: '';
      display: block;
      position: absolute;
      top: 1px;
      left: -32px;
      width: 20px;
      //pointer-events: none;
      height: 20px;
      border: 2px solid #000;
    }

    &::after {
      content: '';
      display: block;
      position: absolute;
      top: 5px;

      left: -24px;
      width: 5px;
      height: 10px;
      transition: all .3s ease;
      border-right: 2px solid $main-color;
      border-bottom: 2px solid $main-color;
      opacity: 0;
    }
  }
}

// Buttons

.btn {
  $btn-height: 70px;
  $btn-padding-x: 10px;
  $btn-font-size: 18px;
  $btn-line-height: 1.5;
  $btn-border-width: 3px;
  display: inline-block;

  position: relative;
  padding-right: $btn-padding-x;

  padding-left: $btn-padding-x;
  border: $btn-border-width solid transparent;
  background-color: transparent;
  color: black;
  font-family: $font-family-bender;
  font-style: normal;
  font-weight: 900;

  letter-spacing: .02em;
  text-align: center;
  text-transform: uppercase;
  vertical-align: middle;
  user-select: none;
  @include transition($btn-transition);

  @include mre-height-block(16px, 60px, 1.5, $btn-border-width);
  @include media-breakpoint-up(xl) {
    @include mre-height-block(18px, 70px, 1.5, $btn-border-width);
    //@include mre-height-block($btn-font-size, $btn-height, $btn-line-height, rem);
  }

  @include hover {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    //box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

.btn-skew {
  transform: $skew;
  transform-origin: center bottom;

  &__revers {
    display: inline-block;
    transform: $skew-reverse;
  }
}

.btn-red {
  @include button-variant($main-color, $main-color, #1b1b1b, #1b1b1b);
}

.btn-black {
  @include button-variant(#101010, #101010, #1b1b1b, #1b1b1b, #1b1b1b, #1b1b1b);
}

.btn-gray {
  @include button-variant(#f5f5f5, #f5f5f5, $main-color, $main-color);
  color: $main-color;
}

.btn-gray-2 {
  @include button-variant(#e7e7e7, #e7e7e7);
  color: rgba(#101010, .4);
}

.btn-border-red {
  //color: #101010;
  //border-color: #DD3F30;
  @include button-outline-variant(#dd3f30, #fff);
  //color: $main-color;
}

.slider-nav {

  &.disabled {
    display: none;
  }

  &__button {
    position: absolute;
    top: 50%;
    width: 60px;
    height: 60px;
    margin-top: -30px;
    border-radius: 50%;
    @extend .btn-red;

    &_left {
      left: 0;
      margin-left: -30px;
    }

    &_right {
      right: 0;
      margin-right: -30px;
    }

    @include media-breakpoint-up(xl) {
      width: 80px;
      height: 80px;
      margin-top: -40px;
      &_left {
        margin-left: -40px;
      }
      &_right {
        margin-right: -40px;
      }
    }
  }
}

.btn-close {
  @include button-variant($main-color, $main-color, #1b1b1b, #1b1b1b);

  width: 61px;
  height: 61px;
  border-radius: 50%;

  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 17px;
    height: 3px;
    background: white;
  }

  &::before {
    transform: translate(-50%, -50%) rotate(45deg);
  }

  &::after {
    transform: translate(-50%, -50%) rotate(-45deg);
  }
}

.wrapper {
  padding-top: 65px;
  //padding-top: 45px;
  @include media-breakpoint-up(md) {
    padding-top: 0;
  }

  @include media-breakpoint-up(xl) {
    padding-top: 0;
  }
}

.page-header {
  padding-top: 32px;
  padding-bottom: 30px;
}

.page-title {
  margin-top: 28px;
  margin-bottom: 0;
}

.breadcumps {
  display: none;
  font-family: $font-family-bender;
  font-size: 12px;
  font-style: italic;
  font-weight: 900;
  letter-spacing: .02em;

  text-transform: uppercase;
  @include media-breakpoint-up(md) {
    display: block;
  }

  &__link {

  }

  &__page {
    color: rgba(#101010, .4);
  }

  &__delimiter {
    display: inline-block;

    //color: $main-color;
    width: 2px;
    height: 11px;
    margin: 0 5px -1px;
    transform: skewX(-12deg);
    background-color: $main-color;
  }
}

.input-counter {
  margin-top: 6px;
  padding-right: 11px;
  font-family: $font-family-bender;
  font-size: 20px;
  font-style: italic;
  font-weight: 900;
  text-align: right;

  &__up {
    @extend %button-reset;
    color: $main-color;
  }

  &__down {
    @extend %button-reset;
    color: $main-color;
  }

  &__count {

    margin: 0 8px;
  }
}

.map-balloon {

  display: block;
  position: absolute;
  z-index: 1010;
  top: 0;
  left: 0;
  padding: 20px 30px;
  transform: $skew;
  background: white;

  box-shadow: 0 14px 34px rgba(0, 0, 0, .15);

  &::before {
    content: '';
    //top: ;
    position: absolute;
    top: -10px;
    left: 50%;
    margin-left: (-10px - 50px);
    transform: $skew-reverse;
    border: 10px solid transparent;
    border-top-width: 0;

    border-bottom-color: white;
  }

  &__inner {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    color: black;
    //margin-bottom: 30px;
    //margin-right: 50px;
  }

  &__address {
    margin-bottom: 8px;
    transform: $skew-reverse;
  }

  &__tel {
    margin-bottom: 8px;
    transform: $skew-reverse;
    font-weight: 600;
  }

  &__scheme {
    transform: $skew-reverse;
    color: $main-color;
    font-weight: 600;
  }
}


.input-range,
.input-range * {
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  touch-action: none;
}

.input-range {
  position: relative;
  direction: ltr;
}

.input-range__base,
.input-range__connects {
  position: relative;
  z-index: 1;
  width: 100%;
  height: 100%;
}

/* Wrapper for all connect elements.
 */
.input-range__connects {
  z-index: 0;
  overflow: hidden;
}

.input-range__connect,
.input-range__origin {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform-origin: 0 0;
  -webkit-transform-style: preserve-3d;
  transform-style: flat;
  will-change: transform;
}

/* Offset direction
 */
html:not([dir='rtl']) .input-range_horizontal .input-range__origin {
  right: 0;
  left: auto;
}

/* Give origins 0 height/width so they don't interfere with clicking the
 * connect elements.
 */
.input-range_vertical .input-range__origin {
  width: 0;
}

.input-range_horizontal .input-range__origin {
  height: 0;
}

.input-range__handle {
  position: absolute;
  backface-visibility: hidden;

  &:focus {
    outline: none;
  }
}

.input-range__touch-area {
  width: 100%;
  height: 100%;
}

.input-range-state-tap .input-range__connect,
.input-range-state-tap .input-range__origin {
  transition: transform .3s;
}

.input-range-state-drag * {
  cursor: inherit !important;
}

/* Slider size and handle placement;
 */
.input-range_horizontal {
  height: 6px;

  .input-range__handle {
    top: -10px;
    left: -13px;
  }
}

.input-range_vertical {
  width: 6px;

  .input-range__handle {
    top: -13px;
    left: -10px;
  }
}

html:not([dir='rtl']) .input-range_horizontal .input-range__handle {
  right: -13px;
  left: auto;
}


/* Styling;
 * Giving the connect element a border radius causes issues with using transform: scale
 */
.input-range {
  border-radius: 3px;
  background: #d2d2d2;
}

.input-range__connects {
  border-radius: 3px;
}

.input-range__connect {
  background: $main-color;
}

/* Handles and cursors;
 */
.input-range-draggable {
  cursor: ew-resize;

  .input-range_vertical & {
    cursor: ns-resize;
  }
}

.input-range__handle {
  width: 26px;
  height: 26px;
  border: 6px solid $main-color;
  border-radius: 50%;

  background: #fff;
  cursor: default;
}

/* Handle stripes;
 */
.input-range__handle {

}

/* Disabled state;
 */

[disabled] .input-range__connect {
  background: #b8b8b8;
}

[disabled].input-range,
[disabled].input-range__handle,
[disabled] .input-range__handle {
  cursor: not-allowed;
}

.input-range__tooltip {
  position: absolute;
  top: -43px;

  left: 50%;
  padding: 3px 7px 2px;
  transform: translateX(-50%);
  border-radius: 20px;
  background: white;
  font-size: 18px;
  font-weight: 500;
  letter-spacing: -.01em;
  line-height: 1;
  white-space: nowrap;

  &::before {
    content: '';
    position: absolute;
    top: 100%;
    left: 50%;

    transform: translateX(-50%);
    border-top: 10px solid #fff;
    border-right: 9px solid transparent;
    border-bottom: 0;
    border-left: 9px solid transparent;
  }
}
