$sprites: (
    'close': "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 18 19'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M5.178 4.46L3.822 5.814l3.822 3.822-3.822 3.822 1.356 1.356L9 10.993l3.822 3.822 1.356-1.356-3.822-3.822 3.822-3.822-1.356-1.356L9 8.281 5.178 4.46z' fill='%239B9B9B'/%3e%3c/svg%3e",
    'heart-fill': "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 31 27'%3e%3cpath d='M21.667 0c-2.524 0-4.854 1.034-6.465 2.792A8.81 8.81 0 0 0 8.77.004C3.957.004 0 3.908 0 8.778c0 2.351.917 4.556 2.577 6.206l11.59 11.598a1.423 1.423 0 0 0 2.014.004l11.676-11.602a8.716 8.716 0 0 0 2.577-6.217C30.426 3.931 26.494 0 21.667 0z' fill='%23F4412D'/%3e%3c/svg%3e",
    'heart': "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 31 27'%3e%3cpath d='M21.667 0c-2.524 0-4.854 1.034-6.465 2.792A8.81 8.81 0 0 0 8.77.004C3.957.004 0 3.908 0 8.778c0 2.351.917 4.556 2.577 6.206l11.59 11.598a1.423 1.423 0 0 0 2.014.004l11.676-11.602a8.716 8.716 0 0 0 2.577-6.217C30.426 3.931 26.494 0 21.667 0zm4.176 12.964L15.179 23.56 4.592 12.964a5.86 5.86 0 0 1-1.739-4.186 5.926 5.926 0 0 1 5.917-5.92 5.948 5.948 0 0 1 5.204 3.06c.254.459.71.74 1.265.735a1.427 1.427 0 0 0 1.247-.766c.964-1.843 2.998-3.034 5.181-3.034 3.25 0 5.909 2.656 5.913 5.919a5.882 5.882 0 0 1-1.737 4.192z' fill='%23F4412D'/%3e%3c/svg%3e"
);

$sizes: (
    'close': (
        'width': 18px,
        'height': 19px
    ),
    'heart-fill': (
        'width': 31px,
        'height': 27px
    ),
    'heart': (
        'width': 31px,
        'height': 27px
    )
);

$variables: (
    
);

// https://github.com/waldemarfm/sass-svg-uri/blob/v1.0.0/_svg-uri.scss
@function sprite-str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if type-of($replace) == 'null' {
        $replace: '';
    }

    @if ( $index ) {
        @return str-slice($string, 1, $index - 1) + $replace + sprite-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

@function sprite-svg-uri($value) {
    $encoded: '';
    $slice: 2000;
    $index: 0;

    @for $i from 1 through ceil(str-length($value) / $slice) {
        $chunk: str-slice($value, $index, $index + $slice - 1);
        $chunk: sprite-str-replace($chunk, '"', "'");
        $chunk: sprite-str-replace($chunk, '<', '%3C');
        $chunk: sprite-str-replace($chunk, '>', '%3E');
        $chunk: sprite-str-replace($chunk, '&', '%26');
        $chunk: sprite-str-replace($chunk, '#', '%23');
        $encoded: #{$encoded}#{$chunk};
        $index: $index + $slice;
    }

    @return $encoded;
}

@mixin sprite($name, $user-variables: (), $include-size: false) {
    $sprite: map-get($sprites, $name);

    // Inject variables
    $default-variables: map-get($variables, $name);
    @if type-of($default-variables) == 'map' {
        @each $key, $value in map-merge($default-variables, $user-variables) {
            @if ( not map-has-key($default-variables, $key) ) {
                @warn 'Sprite \'#{$name}\' does not support variable named \'#{$key}\'';
            }

            $sprite: sprite-str-replace($sprite, '___#{$key}___', sprite-svg-uri(quote(#{$value})));
        }
    } @else if type-of($user-variables) == 'map' {
        @warn 'Sprite \'#{$name}\' does not contain any variables';
    }

    background: url($sprite) center no-repeat;

    @if $include-size {
        $size: map-get($sizes, $name);
        background-size: map-get($size, width) map-get($size, height);
    }
}
