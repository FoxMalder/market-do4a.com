// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
  @include make-container(map_get($grid-gutter-width-map, xs));
  @include make-container-max-widths();

  //@include media-breakpoint-up(sm) {
  //
  //}

  @include media-breakpoint-up(sm) {
    padding-left: map_get($grid-gutter-width-map, sm) / 2; // 20
    padding-right: map_get($grid-gutter-width-map, sm) / 2; // 20
  }
  //@include media-breakpoint-up(xl) {
  //  padding-left: map_get($grid-gutter-width-map, xl) / 2; // 24
  //  padding-right: map_get($grid-gutter-width-map, xl) / 2; // 24
  //}
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but with 100% width for
// fluid, full width layouts.

@if $enable-grid-classes {
  .container-fluid {
    @include make-container();
  }
}

// Row
//
// Rows contain and clear the floats of your columns.

.row {
  @include make-row();

  //@include media-breakpoint-up(sm) {
  //  margin-left: map_get($grid-gutter-width-map, sm) / -2; // 20
  //  margin-right: map_get($grid-gutter-width-map, sm) / -2; // 20
  //}
  @include media-breakpoint-up(xl) {
    margin-left: map_get($grid-gutter-width-map, xl) / -2; // 24
    margin-right: map_get($grid-gutter-width-map, xl) / -2; // 24
  }
}

// Remove the negative margin from default .row, then the horizontal padding
// from all immediate children columns (to prevent runaway style inheritance).
.no-gutters {
  margin-right: 0;
  margin-left: 0;

  > .col,
  > [class*="col-"] {
    padding-right: 0;
    padding-left: 0;
  }
}

// Columns
//
// Common styles for small and large grid columns

@if $enable-grid-classes {
  @include make-grid-columns();
}

@include media-breakpoint-up(xl) {
  $gutter-xl: $grid-gutter-width-xl;

  $breakpoints: $grid-breakpoints;
  $columns: $grid-columns;

  %grid-column-xl {
    padding-right: $grid-gutter-width-xl / 2;
    padding-left: $grid-gutter-width-xl / 2;
  }
  .container {
    @extend %grid-column-xl;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    // Allow columns to stretch full width below their breakpoints
    @for $i from 1 through $columns {
      .col#{$infix}-#{$i} {
        @extend %grid-column-xl;
      }
    }
    .col#{$infix},
    .col#{$infix}-auto {
      @extend %grid-column-xl;
    }
  }
}


.container-no-padding {
  @extend .container;

  @include media-breakpoint-down(xs) {
    padding-left: 0;
    padding-right: 0;

    .row {
      margin-right: 0;
      margin-left: 0;

      > .col,
      > [class*="col-"] {
        padding-right: 0;
        padding-left: 0;
      }
    }
  }
}